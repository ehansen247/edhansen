{"version":3,"sources":["assets/Photo.png","components/homepage.js","components/projects.js","components/navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Homepage","href","Component","Projects","hoverable","className","title","extra","style","textAlign","ButtonGroup","Button","Group","Navigation","props","path","location","pathname","state","home","projects","this","setState","links","Item","type","to","overlay","renderBar","NavigationWithRouter","withRouter","App","basename","process","renderMenu","renderNavigation","renderRoutes","alt","id","src","Photo","exact","component","React","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb93519d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Photo.a7912385.png\";","import React, { Component } from 'react';\n\nclass Homepage extends Component {\n\n    render () {\n        return (\n            <div>\n                <p> Hi, I'm Eric, a sophomore at Harvard College studying Computer Science and\n                    and Applied Math. If you'd like to see a portfolio of my programming projects,\n                    feel free to check out my <a href=\"https://github.com/ehansen247\">GitHub</a>, or\n                    the descriptions and links under the Projects tab on this site.\n                    Outside of programming, my interests include being a part of\n                    the <a href=\"https://www.gocrimson.com/sports/sailing/index\">Harvard Varsity Sailing Team</a> and\n                    the <a href=\"http://business.thecrimson.com/\">Crimson Business Board</a>.\n                    I'll be studying Computer Science along with Mathematics, Statistics,\n                    and Economics over the next three years.\n                </p>\n                <p>\n                    Feel free to contact me at ehansen247@gmail.com or through social media if\n                    you have any questions about me, this site, or anything else.\n                </p>\n            </div>\n        );\n    }\n}\n\nexport default Homepage;\n","import React, { Component } from 'react';\nimport { Card } from 'antd';\nimport '../css/projects.css';\n\nclass Projects extends Component {\n\n    render () {\n        return (\n            <div>\n                <Card hoverable=\"true\" className=\"card\" title=\"Inspire\" extra={<a href=\"https://github.com/ehansen247/Inspire\">GitHub</a>}>\n                    <p className=\"cardText\"> Inspire is an accessible database of\n                        4,000+ inspirational quotes. Integrates a PostgreSQL database and Angular FrontEnd into a NodeJS web app. Includes a daily inspirational quote, and\n                        the ability for users to create an account and store their own personal quotes.\n                    </p>\n                </Card> <br />\n                <Card hoverable=\"true\" className=\"card\" title=\"ReactGames\" extra={<a href=\"https://github.com/ehansen247/ReactGames\">GitHub</a>}>\n                    <p className=\"cardText\">Recreated the games of ConnectFour and TicTacToe to learn React.\n                        Developed a \"computer AI player\" that uses Depth First Search to\n                        determine the best move at any point in a TicTacToe game.\n                    </p>\n                </Card> <br />\n                <Card hoverable=\"true\" className=\"card\" title=\"iOSPersonalFinance\" extra={<a href=\"https://github.com/ehansen247/FinancialLiteracyApp/\">GitHub</a>}>\n                    <p className=\"cardText\">Developed an iOS App that helps users learn the basics of Personal Finance.\n                        Includes a dictionary of financial terms, a financial literacy curriculum,\n                        market news, budget tracker, and financial calculator.\n                    </p>\n                </Card> <br />\n                <Card hoverable=\"true\" className=\"card\" title=\"Chess GUI\" extra={<a href=\"https://github.com/ehansen247/JavaChessGame/\">GitHub</a>}>\n                    <p className=\"cardText\">A two-player, graphics-based, interactive chess game/program\n                        built as a Java Applet. Features all standard Chess moves including pawn promotion,\n                        en-passant, castling, etc., as well as customizable board colors, and a Game To PGN\n                        converter.\n                    </p>\n                </Card>\n                <p style={{textAlign: \"center\"}}>See more projects at <a href=\"https://github.com/ehansen247\">github.com/ehansen247</a></p>\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from \"react-router\";\nimport \"../css/nav.css\";\nimport { Button, Dropdown, Icon, Menu } from 'antd';\n\nconst ButtonGroup = Button.Group;\n\nclass Navigation extends Component {\n\n    constructor(props) {\n        super(props);\n        const path = this.props.location.pathname;\n        this.state = {\n            path: path,\n            home: (path === '/') ? 'primary' : 'default',\n            projects: (path === '/projects') ? 'primary' : 'default'\n        }\n    }\n\n    componentDidUpdate() {\n        const path = this.props.location.pathname;\n        if (path !== this.state.path) {\n            this.setState({\n                path: path,\n                home: (path === '/') ? 'primary' : 'default',\n                projects: (path === '/projects') ? 'primary' : 'default'\n            })\n        }\n    }\n\n    renderBar () {\n        const links = (\n            <Menu>\n                <Menu.Item>\n                    <a href=\"https://github.com/ehansen247\"><Icon type=\"github\" /> GitHub</a>\n                </Menu.Item>\n                <Menu.Item>\n                    <a href=\"https://www.linkedin.com/in/eric-hansen-2022/\"><Icon type=\"linkedin\" /> LinkedIn</a>\n                </Menu.Item>\n                <Menu.Item>\n                    <a href=\"https://www.facebook.com/ehansen247\"><Icon type=\"facebook\" /> Facebook</a>\n                </Menu.Item>\n            </Menu>\n        );\n        return (\n            <div className=\"nav\">\n                <ButtonGroup>\n                    <Button className=\"button\" type={this.state.home}><Link to=\"/\">Home</Link></Button>\n                    <Button className=\"button\" type={this.state.projects}><Link to=\"/projects\">Projects</Link></Button>\n                    <Dropdown overlay={links}>\n                        <Button className=\"button\">Links<Icon type=\"down\" /></Button>\n                    </Dropdown>\n                </ButtonGroup>\n            </div>\n        )\n    }\n\n    render () {\n        return (\n            this.renderBar()\n        );\n    }\n}\n\nconst NavigationWithRouter = withRouter(Navigation);\nexport default NavigationWithRouter;\n\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Homepage from './components/homepage';\nimport Projects from './components/projects';\nimport NavigationWithRouter from './components/navigation';\nimport Photo from './assets/Photo.png';\nimport { Icon } from 'antd';\nimport \"./css/app.css\";\n\nclass App extends React.Component {\n\n    render () {\n        return (\n\n            <div className=\"app\">\n                <BrowserRouter basename={process.env.PUBLIC_URL}>\n                    { this.renderMenu() }\n                    <br />\n                    { this.renderNavigation() } <br />\n                    { this.renderRoutes() }\n                </BrowserRouter>\n            </div>\n        )\n    }\n\n    renderMenu () {\n        return (\n            <div className=\"menu\">\n                <div className=\"left\">\n                    <img alt=\"Profile\" id=\"photo\" src={Photo}></img>\n                </div>\n                <div className=\"right\">\n                    <p id=\"name\">Eric Hansen</p>\n                    <div className=\"links\">\n                        <p>&nbsp;<Icon type=\"mail\" /> ehansen247@gmail.com</p>\n                        <p>&nbsp;<Icon type=\"github\" /> github.com/ehansen247</p>\n                        <p>&nbsp;<Icon type=\"linkedin\" /> linkedin.com/in/eric-hansen-2022</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderNavigation () {\n        return (\n            <div className=\"navigation\">\n                <NavigationWithRouter  />\n            </div>\n        );\n    }\n\n    renderRoutes() {\n\n        return (\n            <div className=\"body\">\n\n                <Switch>\n                    <Route exact path=\"/\" component={ Homepage } />\n                    <Route exact path=\"/projects\" component={ Projects } />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}